//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var SSHKeys = newSSHKeysTable("", "ssh_keys", "")

type sSHKeysTable struct {
	sqlite.Table

	// Columns
	Fingerprint sqlite.ColumnString
	Email       sqlite.ColumnString
	CreatedAt   sqlite.ColumnTimestamp

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type SSHKeysTable struct {
	sSHKeysTable

	EXCLUDED sSHKeysTable
}

// AS creates new SSHKeysTable with assigned alias
func (a SSHKeysTable) AS(alias string) *SSHKeysTable {
	return newSSHKeysTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SSHKeysTable with assigned schema name
func (a SSHKeysTable) FromSchema(schemaName string) *SSHKeysTable {
	return newSSHKeysTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SSHKeysTable with assigned table prefix
func (a SSHKeysTable) WithPrefix(prefix string) *SSHKeysTable {
	return newSSHKeysTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SSHKeysTable with assigned table suffix
func (a SSHKeysTable) WithSuffix(suffix string) *SSHKeysTable {
	return newSSHKeysTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSSHKeysTable(schemaName, tableName, alias string) *SSHKeysTable {
	return &SSHKeysTable{
		sSHKeysTable: newSSHKeysTableImpl(schemaName, tableName, alias),
		EXCLUDED:     newSSHKeysTableImpl("", "excluded", ""),
	}
}

func newSSHKeysTableImpl(schemaName, tableName, alias string) sSHKeysTable {
	var (
		FingerprintColumn = sqlite.StringColumn("fingerprint")
		EmailColumn       = sqlite.StringColumn("email")
		CreatedAtColumn   = sqlite.TimestampColumn("created_at")
		allColumns        = sqlite.ColumnList{FingerprintColumn, EmailColumn, CreatedAtColumn}
		mutableColumns    = sqlite.ColumnList{EmailColumn, CreatedAtColumn}
	)

	return sSHKeysTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Fingerprint: FingerprintColumn,
		Email:       EmailColumn,
		CreatedAt:   CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
